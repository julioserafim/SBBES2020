"ï»¿JSPIRIT TOOL"
""
"Feature Envy	CorsFilter.doFilter	1	1,0"
"Feature Envy	OcorrenciaController.listaOcorrencia	2	1,0"
"Feature Envy	OcorrenciaController.update	3	1,0"
"Dispersed Coupling	JwtTokenFilter.doFilter	4	1,0"
"Feature Envy	ImpactoController.find	5	1,0"
"Feature Envy	ImpactoController.atualizar	6	1,0"
"Feature Envy	AreaAtuacaoController.atualizar	7	1,0"
"Feature Envy	RespostaRiscoController.find	8	1,0"
"Feature Envy	RespostaRiscoController.atualizar	9	1,0"
"God Class	Plano	10	1,0"
"God Class	Risco	11	1,0"
"Feature Envy	CategoriaRiscoController.atualizar	12	1,0"
"Feature Envy	PlanoController.update	13	1,0"
"Feature Envy	AcaoController.atualizar	14	1,0"
"Shotgun Surgery	PlanoService.findVigente	15	1,0"
"Feature Envy	ProbabilidadeController.find	16	1,0"
"Feature Envy	ProbabilidadeController.atualizar	17	1,0"
"Feature Envy	UnidadeServiceImp.delete	18	1,0"
"Feature Envy	AvaliacaoController.find	19	1,0"
"Feature Envy	AvaliacaoController.update	20	1,0"
"Feature Envy	NivelRiscoController.find	21	1,0"
"Feature Envy	NivelRiscoController.atualizar	22	1,0"
"Feature Envy	PlanoDeTratamentoController.find	23	1,0"
"Feature Envy	PlanoDeTratamentoController.update	24	1,0"
"Feature Envy	RiscoController.update	25	1,0"
"Feature Envy	RiscoController.updatePlano	26	1,0"
"Feature Envy	PlanoDeContingenciaController.find	27	1,0"
"Feature Envy	PlanoDeContingenciaController.update	28	1,0"
"Feature Envy	AvaliacaoControleController.find	29	1,0"
"Feature Envy	AvaliacaoControleController.atualizar	30	1,0"
""
""
"Long Method JDeodorant"
""
"br.....controller.AcaoController	public ResponseEntity<Collection<br.....model.Acao>> findByUsuario(br.....model.Plano, br.....model.Usuario) 	plano	B1	0/2"
"br.....controller.AreaAtuacaoController	public ResponseEntity<Collection<br.....model.AreaAtuacao>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.AvaliacaoControleController	public ResponseEntity<Collection<br.....model.AvaliacaoControle>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.CategoriaRiscoController	public ResponseEntity<Collection<br.....model.CategoriaRisco>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.ImpactoController	public ResponseEntity<List<br.....model.Impacto>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.NivelRiscoController	public ResponseEntity<Collection<br.....model.NivelRisco>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.ProbabilidadeController	public ResponseEntity<List<br.....model.Probabilidade>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.RespostaRiscoController	public ResponseEntity<List<br.....model.RespostaRisco>> findByPlano(br.....model.Plano) 	plano	B1	0/2"
"br.....controller.RiscoController	public ResponseEntity<Collection<br.....model.Risco>> findAll(br.....model.Plano, br.....model.Usuario) 	plano	B1	0/2"
"br.....controller.PlanoDeTratamentoController	public ResponseEntity<br.....model.PlanoTratamentoRisco> update(br.....model.PlanoTratamentoRisco, java.lang.Integer) 	planoOriginal	B1	1/14"
"br.....controller.PlanoDeTratamentoController	public ResponseEntity<br.....model.PlanoTratamentoRisco> update(br.....model.PlanoTratamentoRisco, java.lang.Integer) 	planoOriginal	B3	0/13"
"br.....controller.AvaliacaoController	public ResponseEntity<br.....model.AvaliacaoRisco> update(br.....model.AvaliacaoRisco, java.lang.Integer) 	avaliacaoOriginal	B1	1/6"
"br.....controller.AvaliacaoController	public ResponseEntity<br.....model.AvaliacaoRisco> update(br.....model.AvaliacaoRisco, java.lang.Integer) 	avaliacaoOriginal	B3	0/5"
"br.....controller.OcorrenciaController	public ResponseEntity<br.....model.Ocorrencia> update(br.....model.Ocorrencia, java.lang.Integer) 	ocorrenciaOriginal	B1	1/6"
"br.....controller.OcorrenciaController	public ResponseEntity<br.....model.Ocorrencia> update(br.....model.Ocorrencia, java.lang.Integer) 	ocorrenciaOriginal	B3	0/5"
"br.....controller.PlanoController	public ResponseEntity<br.....model.Plano> update(java.lang.Integer, br.....model.Plano) 	planoOriginal	B1	1/6"
"br.....controller.PlanoController	public ResponseEntity<br.....model.Plano> update(java.lang.Integer, br.....model.Plano) 	planoOriginal	B3	0/5"
"br.....controller.PlanoDeContingenciaController	public ResponseEntity<br.....model.PlanoContingencia> update(br.....model.PlanoContingencia, java.lang.Integer) 	planoOriginal	B1	1/4"
"br.....controller.PlanoDeContingenciaController	public ResponseEntity<br.....model.PlanoContingencia> update(br.....model.PlanoContingencia, java.lang.Integer) 	planoOriginal	B3	0/3"
"br.....controller.RiscoController	public ResponseEntity<br.....model.Risco> updatePlano(br.....model.Risco, java.lang.Integer) 	riscoOriginal	B1	1/4"
"br.....controller.RiscoController	public ResponseEntity<br.....model.Risco> updatePlano(br.....model.Risco, java.lang.Integer) 	riscoOriginal	B3	0/3"
""
""
"GOD CLASS Jdeodorant"
""
"br.....config.JwtTokenProvider	[br.....config.JwtTokenProvider::java.lang.String secretKey, br.....config.JwtTokenProvider::init():void, br.....config.JwtTokenProvider::getUsername(java.lang.String):java.lang.String, br.....config.JwtTokenProvider::validateToken(java.lang.String):boolean, br.....config.JwtTokenProvider::long validityInMilliseconds, br.....config.JwtTokenProvider::createToken(java.lang.String, java.util.List<java.lang.String>):java.lang.String, br.....config.JwtTokenProvider::createRefreshToken(java.lang.String):java.lang.String]"
"br.....config.JwtTokenProvider	[br.....config.JwtTokenProvider::java.lang.String secretKey, br.....config.JwtTokenProvider::init():void, br.....config.JwtTokenProvider::getUsername(java.lang.String):java.lang.String, br.....config.JwtTokenProvider::validateToken(java.lang.String):boolean]"
"br.....controller.AreaAtuacaoController	[br.....controller.AreaAtuacaoController::br.....service.AreaAtuacaoService areaAtuacaoService, br.....controller.AreaAtuacaoController::save(br.....model.AreaAtuacao):org.springframework.http.ResponseEntity<br.....model.AreaAtuacao>, br.....controller.AreaAtuacaoController::delete(br.....model.AreaAtuacao):org.springframework.http.ResponseEntity<br.....model.AreaAtuacao>, br.....controller.AreaAtuacaoController::atualizar(br.....model.AreaAtuacao, br.....model.AreaAtuacao):org.springframework.http.ResponseEntity<br.....model.AreaAtuacao>]"
"br.....controller.CategoriaRiscoController	[br.....controller.CategoriaRiscoController::br.....service.CategoriaRiscoService categoriaRiscoService, br.....controller.CategoriaRiscoController::cadastrarUmaCategoria(br.....model.CategoriaRisco):org.springframework.http.ResponseEntity<br.....model.CategoriaRisco>, br.....controller.CategoriaRiscoController::atualizar(br.....model.CategoriaRisco, br.....model.CategoriaRisco):org.springframework.http.ResponseEntity<br.....model.CategoriaRisco>, br.....controller.CategoriaRiscoController::delete(java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.CategoriaRisco>]"
"br.....controller.ImpactoController	[br.....controller.ImpactoController::br.....service.ImpactoService impactoService, br.....controller.ImpactoController::cadastrar(br.....model.Impacto):org.springframework.http.ResponseEntity<br.....model.Impacto>, br.....controller.ImpactoController::find(java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.Impacto>, br.....controller.ImpactoController::atualizar(br.....model.Impacto, br.....model.Impacto):org.springframework.http.ResponseEntity<br.....model.Impacto>, br.....controller.ImpactoController::delete(br.....model.Impacto):org.springframework.http.ResponseEntity<br.....model.Impacto>]"
"br.....controller.OcorrenciaController	[br.....controller.OcorrenciaController::br.....service.OcorrenciaService ocorrenciaService, br.....controller.OcorrenciaController::findAll(org.springframework.security.core.userdetails.UserDetails):org.springframework.http.ResponseEntity<java.util.Collection<br.....model.Ocorrencia>>, br.....controller.OcorrenciaController::listaOcorrencia(java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.Ocorrencia>, br.....controller.OcorrenciaController::update(br.....model.Ocorrencia, java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.Ocorrencia>, br.....controller.OcorrenciaController::cadastraOcorrencia(br.....model.Ocorrencia):org.springframework.http.ResponseEntity<br.....model.Ocorrencia>, br.....controller.OcorrenciaController::delete(br.....model.Ocorrencia):org.springframework.http.ResponseEntity<br.....model.Ocorrencia>, br.....controller.OcorrenciaController::find(java.lang.String):org.springframework.http.ResponseEntity<java.util.List<br.....model.Ocorrencia>>, br.....controller.OcorrenciaController::find(java.time.LocalDate, java.time.LocalDate):org.springframework.http.ResponseEntity<java.util.List<br.....model.Ocorrencia>>, br.....controller.OcorrenciaController::find(java.time.LocalDate, java.time.LocalDate, java.lang.String):org.springframework.http.ResponseEntity<java.util.List<br.....model.Ocorrencia>>]"
"br.....controller.PlanoDeContingenciaController	[br.....controller.PlanoDeContingenciaController::br.....service.PlanoContigenciaService planoContigenciaService, br.....controller.PlanoDeContingenciaController::findAll(org.springframework.security.core.userdetails.UserDetails):org.springframework.http.ResponseEntity<java.util.Collection<br.....model.PlanoContingencia>>, br.....controller.PlanoDeContingenciaController::find(java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.PlanoContingencia>, br.....controller.PlanoDeContingenciaController::update(br.....model.PlanoContingencia, java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.PlanoContingencia>, br.....controller.PlanoDeContingenciaController::delete(br.....model.PlanoContingencia):org.springframework.http.ResponseEntity<br.....model.PlanoContingencia>, br.....controller.PlanoDeContingenciaController::cadastrarPlanoContingencia(br.....model.PlanoContingencia):org.springframework.http.ResponseEntity<br.....model.PlanoContingencia>]"
"br.....controller.ProbabilidadeController	[br.....controller.ProbabilidadeController::br.....service.ProbabilidadeService probabilidadeService, br.....controller.ProbabilidadeController::cadastrar(br.....model.Probabilidade):org.springframework.http.ResponseEntity<br.....model.Probabilidade>, br.....controller.ProbabilidadeController::find(java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.Probabilidade>, br.....controller.ProbabilidadeController::atualizar(br.....model.Probabilidade, br.....model.Probabilidade):org.springframework.http.ResponseEntity<br.....model.Probabilidade>, br.....controller.ProbabilidadeController::delete(br.....model.Probabilidade):org.springframework.http.ResponseEntity<br.....model.Probabilidade>]"
"br.....controller.RespostaRiscoController	[br.....controller.RespostaRiscoController::br.....service.RespostaRiscoService respostaRiscoService, br.....controller.RespostaRiscoController::cadastrar(br.....model.RespostaRisco):org.springframework.http.ResponseEntity<br.....model.RespostaRisco>, br.....controller.RespostaRiscoController::find(java.lang.Integer):org.springframework.http.ResponseEntity<br.....model.RespostaRisco>, br.....controller.RespostaRiscoController::delete(br.....model.RespostaRisco):org.springframework.http.ResponseEntity<br.....model.RespostaRisco>, br.....controller.RespostaRiscoController::atualizar(br.....model.RespostaRisco, br.....model.RespostaRisco):org.springframework.http.ResponseEntity<br.....model.RespostaRisco>]"
"br.....controller.RiscoController	[br.....controller.RiscoController::br.....service.RiscoService riscoService, br.....controller.RiscoController::find(java.lang.String):org.springframework.http.ResponseEntity<java.util.List<br.....model.Risco>>, br.....controller.RiscoController::update(br.....model.Risco, org.springframework.validation.BindingResult):org.springframework.http.ResponseEntity<br.....model.Risco>]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.AvaliacaoControle> avaliacoesControle, br.....model.Plano::removeAvaliacaoControle(br.....model.AvaliacaoControle):void, br.....model.Plano::addAvaliacaoControle(br.....model.AvaliacaoControle):void, br.....model.Plano::addAllAvaliacaoControle(java.util.List<br.....model.AvaliacaoControle>):void]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.RespostaRisco> respostasRisco, br.....model.Plano::removeRespostaRisco(br.....model.RespostaRisco):void, br.....model.Plano::addRespostaRisco(br.....model.RespostaRisco):void, br.....model.Plano::addAllRespostasRisco(java.util.List<br.....model.RespostaRisco>):void]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.AreaAtuacao> areas, br.....model.Plano::removeArea(br.....model.AreaAtuacao):void, br.....model.Plano::addArea(br.....model.AreaAtuacao):void, br.....model.Plano::addAllAreas(java.util.List<br.....model.AreaAtuacao>):void]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.CategoriaRisco> categoriasRisco, br.....model.Plano::removeCategoriaRisco(br.....model.CategoriaRisco):void, br.....model.Plano::addCategoriaRisco(br.....model.CategoriaRisco):void, br.....model.Plano::addAllCategorias(java.util.List<br.....model.CategoriaRisco>):void]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.Impacto> impactos, br.....model.Plano::removeImpacto(br.....model.Impacto):void, br.....model.Plano::addImpacto(br.....model.Impacto):void, br.....model.Plano::addAllImpacto(java.util.List<br.....model.Impacto>):void, br.....model.Plano::getImpactoByName(java.lang.String):br.....model.Impacto]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.NivelRisco> niveisRisco, br.....model.Plano::removeNivelRisco(br.....model.NivelRisco):void, br.....model.Plano::addNivelRisco(br.....model.NivelRisco):void, br.....model.Plano::addAllNivelRisco(java.util.List<br.....model.NivelRisco>):void, br.....model.Plano::getNivelRiscoByName(java.lang.String):br.....model.NivelRisco]"
"br.....model.Plano	[br.....model.Plano::java.util.List<br.....model.Probabilidade> probabilidades, br.....model.Plano::removeProbabilidade(br.....model.Probabilidade):void, br.....model.Plano::addProbabilidade(br.....model.Probabilidade):void, br.....model.Plano::addAllProbabilidade(java.util.List<br.....model.Probabilidade>):void, br.....model.Plano::getProbabilidadeByName(java.lang.String):br.....model.Probabilidade]"
"br.....model.Risco	[br.....model.Risco::java.util.List<br.....model.AvaliacaoRisco> avaliacoes, br.....model.Risco::removeAvaliacaoRisco(br.....model.AvaliacaoRisco):void, br.....model.Risco::addAvaliacao(br.....model.AvaliacaoRisco):void, br.....model.Risco::addAllAvaliacoes(java.util.List<br.....model.AvaliacaoRisco>):void]"
"br.....model.Risco	[br.....model.Risco::java.util.List<br.....model.Ocorrencia> ocorrencias, br.....model.Risco::removeOcorrencia(br.....model.Ocorrencia):void, br.....model.Risco::addOcorrencia(br.....model.Ocorrencia):void, br.....model.Risco::addAllOcorrencias(java.util.List<br.....model.Ocorrencia>):void]"
"br.....model.Risco	[br.....model.Risco::java.util.List<br.....model.PlanoContingencia> contingencias, br.....model.Risco::removeContingencia(br.....model.PlanoContingencia):void, br.....model.Risco::addContingencia(br.....model.PlanoContingencia):void, br.....model.Risco::addAllContingencias(java.util.List<br.....model.PlanoContingencia>):void]"
"br.....model.Risco	[br.....model.Risco::java.util.List<br.....model.CategoriaRisco> categorias, br.....model.Risco::addCategoria(br.....model.CategoriaRisco):void, br.....model.Risco::addAllCategorias(java.util.List<br.....model.CategoriaRisco>):void, br.....model.Risco::removeCategoria(br.....model.CategoriaRisco):void]"
"br.....model.Risco	[br.....model.Risco::java.util.List<br.....model.Acao> acoes, br.....model.Risco::addAcao(br.....model.Acao):void, br.....model.Risco::addAcoes(java.util.List<br.....model.Acao>):void, br.....model.Risco::removeAcao(br.....model.Acao):void]"
"br.....exception.ExceptionResponse.ExceptionResponseBuilder	[br.....exception.ExceptionResponse.ExceptionResponseBuilder::org.springframework.http.HttpStatus status, br.....exception.ExceptionResponse.ExceptionResponseBuilder::withStatus(org.springframework.http.HttpStatus):br.....exception.ExceptionResponse.ExceptionResponseBuilder, br.....exception.ExceptionResponse.ExceptionResponseBuilder::build():br.....exception.ExceptionResponse, br.....exception.ExceptionResponse.ExceptionResponseBuilder::java.lang.String error, br.....exception.ExceptionResponse.ExceptionResponseBuilder::withError(java.lang.String):br.....exception.ExceptionResponse.ExceptionResponseBuilder]"
